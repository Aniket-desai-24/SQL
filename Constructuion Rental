-- Create the database
CREATE DATABASE construction_vehicle_rental;

-- Use the database
USE construction_vehicle_rental;

-- Create the customers table
CREATE TABLE customers (
  customer_id INT PRIMARY KEY,
  first_name VARCHAR(50),
  last_name VARCHAR(50),
  email VARCHAR(100),
  phone_number VARCHAR(20),
  address VARCHAR(200),
  city VARCHAR(50),
  state VARCHAR(50),
  postal_code VARCHAR(20)
);

-- Create the vehicles table
CREATE TABLE vehicles (
  vehicle_id INT PRIMARY KEY,
  vehicle_name VARCHAR(100),
  manufacturer VARCHAR(50),
  model VARCHAR(50),
  year INT,
  price_per_day DECIMAL(10, 2),
  category VARCHAR(50)
);

-- Create the rentals table
CREATE TABLE rentals (
  rental_id INT PRIMARY KEY,
  customer_id INT,
  vehicle_id INT,
  start_date DATE,
  end_date DATE,
  total_cost DECIMAL(10, 2),
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
  FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id)
);

-- Insert data into the customers table
INSERT INTO customers (customer_id, first_name, last_name, email, phone_number, address, city, state, postal_code)
VALUES
  (1, 'Aarav', 'Singh', 'aarav.singh@example.com', '+91-9876543210', '123 Main St', 'Mumbai', 'Maharashtra', '400001'),
  (2, 'Aditi', 'Sharma', 'aditi.sharma@example.com', '+91-9876543211', '456 Oak Ave', 'Delhi', 'Delhi', '110001'),
  (3, 'Ishaan', 'Patel', 'ishaan.patel@example.com', '+91-9876543212', '789 Maple St', 'Bengaluru', 'Karnataka', '560001');

-- Insert data into the vehicles table
INSERT INTO vehicles (vehicle_id, vehicle_name, manufacturer, model, year, price_per_day, category)
VALUES
  (1, 'JCB Backhoe Loader', 'JCB', '3DX', 2020, 5000.00, 'Backhoe Loaders'),
  (2, 'Tata Hitachi Excavator', 'Tata Hitachi', 'EX 200 LC', 2019, 7500.00, 'Excavators'),
  (3, 'Mahindra EarthMaster', 'Mahindra Construction Equipment', 'EarthMaster SX', 2021, 4000.00, 'Backhoe Loaders'),
  (4, 'Caterpillar Bulldozer', 'Caterpillar Inc.', 'D9T', 2022, 10000.00, 'Bulldozers');

-- Insert data into the rentals table
INSERT INTO rentals (rental_id, customer_id, vehicle_id, start_date, end_date, total_cost)
VALUES
  (1, 1, 1, '2022-05-01', '2022-05-05', 20000.00),
  (2, 2, 2, '2022-06-01', '2022-06-05', 37500.00),
  (3, 3, 3, '2022-07-01', '2022-07-05', 16000.00),
  (4, 1, 4, '2022-08-01', '2022-08-05 , 25000.00);
  
  
 -- Query to find all customers and their rentals
SELECT customers.first_name, customers.last_name, vehicles.vehicle_name, rentals.start_date, rentals.end_date, rentals.total_cost
FROM customers
JOIN rentals ON customers.customer_id = rentals.customer_id
JOIN vehicles ON rentals.vehicle_id = vehicles.vehicle_id
ORDER BY customers.last_name;

-- Query to find the total revenue generated by each category of vehicles
SELECT vehicles.category, SUM(rentals.total_cost) AS revenue
FROM rentals
JOIN vehicles ON rentals.vehicle_id = vehicles.vehicle_id
GROUP BY vehicles.category
ORDER BY revenue DESC;

-- Query to find the total revenue generated by each manufacturer
SELECT vehicles.manufacturer, SUM(rentals.total_cost) AS revenue
FROM rentals
JOIN vehicles ON rentals.vehicle_id = vehicles.vehicle_id
GROUP BY vehicles.manufacturer
ORDER BY revenue DESC;

-- Query to find the total number of rentals by customer
SELECT customers.first_name, customers.last_name, COUNT(*) AS total_rentals
FROM customers
JOIN rentals ON customers.customer_id = rentals.customer_id
GROUP BY customers.customer_id
ORDER BY total_rentals DESC;

-- Query to find the most popular vehicles (based on total number of rentals)
SELECT vehicles.vehicle_name, COUNT(*) AS total_rentals
FROM rentals
JOIN vehicles ON rentals.vehicle_id = vehicles.vehicle_id
GROUP BY vehicles.vehicle_id
ORDER BY total_rentals DESC
LIMIT 3;
